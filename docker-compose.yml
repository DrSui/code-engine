services:

  redis:
    image: redis:7-alpine
    container_name: trigger_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  web:
    build: .
    container_name: trigger_web
    user: "1000:1000"
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
    volumes:
      - ./:/app
    ports:
      - "8000:8000"
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - API_CALLS_DIR=/app/api_calls
      - API_CALLS_MAPPING=mappings.json
    depends_on:
      - redis
    restart: unless-stopped

  executor:
    build: .
    container_name: trigger_executor
    command: ["sh", "-c", "/app/start-executor.sh"]
    # DO NOT set user here - we want root to create the socket dir and set perms
    volumes:
      - ./:/app
      - executor_sock:/tmp/executor_sock
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CUSTOM_TIMEOUT_SECONDS=5
      - CUSTOM_CPU_SECONDS=2
      - CUSTOM_MEMORY_MB=100
      - EXECUTOR_POOL_WORKERS=3
    depends_on:
      - redis
    restart: unless-stopped

  worker:
    build: .
    container_name: trigger_worker
    user: "1000:1000"
    # include tasks so celery registers execute_pipeline
    command: ["celery", "-A", "celery_app.celery", "worker", "--loglevel=info", "--concurrency=1", "--include=tasks"]
    volumes:
      - ./:/app
      - executor_sock:/tmp/executor_sock
    environment:
      - REDIS_URL=redis://redis:6379/0
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - EXECUTOR_URL=unix:///tmp/executor_sock/executor.sock
      - API_CALLS_DIR=/app/api_calls
      - API_CALLS_MAPPING=mappings.json
      - CUSTOM_TIMEOUT_SECONDS=5
      - CUSTOM_CPU_SECONDS=2
      - CUSTOM_MEMORY_MB=100
      - EXECUTOR_POOL_WORKERS=3
    depends_on:
      - redis
      - executor
    restart: unless-stopped

volumes:
  executor_sock:
    driver: local

  # client:
  #   build: .
  #   container_name: trigger_client
  #   command: python client.py
  #   volumes:
  #     - ./:/app
  #   environment:
  #     - BASE_URL=http://web:8000
  #   depends_on:
  #     - web
  #   restart: "no"
  #
